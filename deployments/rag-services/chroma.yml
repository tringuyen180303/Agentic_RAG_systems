# # deployment-chroma.yaml
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: chroma
#   namespace: rag-services
# spec:
#   replicas: 1
#   selector:
#     matchLabels: { app: chroma }
#   template:
#     metadata:
#       labels: { app: chroma }
#     spec:
#       containers:
#       - name: chroma
#         image: ghcr.io/chroma-core/chroma:latest
#         env:
#         - name: IS_PERSISTENT
#           value: "TRUE"
#         volumeMounts:
#         - mountPath: /data
#           name: data
#       volumes:
#       - name: data
#         persistentVolumeClaim:
#           claimName: chroma-pvc
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: chroma
#   namespace: rag-services
# spec:
#   type: ClusterIP
#   ports:
#   - port: 8000
#     targetPort: 8000
#     protocol: TCP
#   selector:
#     app: chroma

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: chromadb
  namespace: rag-services
spec:
  serviceName: "chroma"
  replicas: 1
  selector:
    matchLabels:
      app: chroma
  template:
    metadata:
      labels:
        app: chroma
    spec:
      containers:
      - name: chroma
        image: ghcr.io/chroma-core/chroma:latest
        env:
        - name: IS_PERSISTENT
          value: "TRUE"
        volumeMounts:
        - name: data
          mountPath: /chroma/chroma
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 1Gi
      # make sure this matches your PVC, or omit if using templates
